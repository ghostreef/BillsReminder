<% content_for(:body_attributes) do %>
  data-no-turbolink="true"
<% end %>

<h3>Spending for <%= @category.name %></h3>

<script type='text/javascript'>
  var x_axis_values = [];

  /*These lines are all chart setup.  Pick and choose which chart features you want to utilize. */
  nv.addGraph(function () {
    var chart = nv.models.lineChart()
        .margin({left: 80})  //Adjust chart margins to give the x-axis some breathing room.
        .useInteractiveGuideline(true)  //We want nice looking tooltips and a guideline!
        .transitionDuration(350)  //how fast do you want the lines to transition?
        .showLegend(true)       //Show the legend, allowing users to turn on/off line series.
        .showYAxis(true)        //Show the y-axis
        .showXAxis(true)        //Show the x-axis
      ;

    chart.xAxis     //Chart x-axis settings
      .axisLabel('Date (%b %y)')
      .tickValues(x_axis_values)
      .tickFormat(function (d) {
        return d3.time.format('%b %y')(new Date(d));
      });

    chart.yAxis     //Chart y-axis settings
      .axisLabel('Spending ($)')
      .tickFormat(function(d) { return '$' + d3.format(',.')(d)});


    /* Done setting the chart up? Time to render it!*/
    var myData = graphData();   //You need data...

    d3.select("body").append("svg")
      .attr("height", '500')
      .datum(myData)
      .call(chart);

    //Update the chart when window resizes.
    nv.utils.windowResize(function () {
      chart.update()
    });
    return chart;
  });


  function graphData() {
    var series = <%== @series.to_json %>;

    for (var i = 0; i < series.values.length; i++) {
      var date = new Date(series.values[i].year, series.values[i].month, 1);
      series.values[i].x = date;
      x_axis_values.push(date);
      series.values[i].y = parseFloat(series.values[i].total)
    }

    return [series];
  }

</script>

