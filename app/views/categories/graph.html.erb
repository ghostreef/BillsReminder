<% content_for(:body_attributes) do %>
  data-no-turbolink="true"
<% end %>

<h3><%= @title %></h3>
<p><i class="fa fa-info-circle"></i> TIP: Clicking on the category key toggles it. Double clicking it removes all other lines.</p>

<script type='text/javascript'>
  var x_axis_values = [];

  /*These lines are all chart setup.  Pick and choose which chart features you want to utilize. */
  nv.addGraph(function () {
    var chart = nv.models.lineChart()
        .margin({left: 80})  //Adjust chart margins to give the x-axis some breathing room.
        .useInteractiveGuideline(true)  //We want nice looking tooltips and a guideline!
        .transitionDuration(350)  //how fast do you want the lines to transition?
        .showLegend(true)       //Show the legend, allowing users to turn on/off line series.
        .showYAxis(true)        //Show the y-axis
        .showXAxis(true)        //Show the x-axis
      ;

    chart.xAxis     //Chart x-axis settings
      .axisLabel('Date (Mon YY)')
      .tickValues(x_axis_values)
      .tickFormat(function (d) {
        return d3.time.format('%b %y')(new Date(d));
      });

    chart.yAxis     //Chart y-axis settings
      .axisLabel('Spending ($)')
      .tickFormat(function(d) { return '$' + d3.format(',.')(d)});


    /* Done setting the chart up? Time to render it!*/
    var myData = graphData();   //You need data...

    d3.select("body").append("svg")
      .attr("height", '500')
      .datum(myData)
      .call(chart);

    //Update the chart when window resizes.
    nv.utils.windowResize(function () {
      chart.update()
    });
    return chart;
  });


  function graphData() {
    var series = <%== @series.to_json %>;

    for (var g = 0; g < series.length; g++) {

      var line = series[g];
      for (var i = 0; i < line.values.length; i++) {
        var date = new Date(line.values[i].year, line.values[i].month, 1);
        line.values[i].x = date;

        // this isn't actually necessary, d3 will ignore duplicate values but g * x is a pretty big array
        if (x_axis_values.map(function (e) {
            return e.valueOf();
          }).indexOf(date.valueOf()) == -1) {
          x_axis_values.push(date);
        }

        line.values[i].y = parseFloat(line.values[i].total)
      }
      
    }

    return series;
  }

</script>

